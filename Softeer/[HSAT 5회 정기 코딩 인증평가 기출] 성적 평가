import java.io.*;
import java.util.*;

public class Main {
    public static class Node{
        int idx;
        int score;
        public Node(int idx, int score){
            this.idx = idx;
            this.score = score;
        }
    }
    public static void main(String[] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        PriorityQueue<Node> q = new PriorityQueue<>((a,b)->(b.score-a.score));
        Node[] arr = new Node[n];
        int[][] result = new int[4][n];
        for(int i=0;i<3;i++){
            StringTokenizer st = new StringTokenizer(br.readLine());
            for(int j=0;j<n;j++){
                int input = Integer.parseInt(st.nextToken());
                if(arr[j]!=null){
                    arr[j].score += input;
                }else{
                    arr[j] = new Node(j, input);
                }
                q.offer(new Node(j,input));
            }
            int rank = 1;
            int temp = 0;
            while(!q.isEmpty()){
                Node node = q.poll();
                result[i][node.idx] = rank;
                if(q.isEmpty())continue;
                if(node.score != q.peek().score){
                    rank += temp +1;
                    temp = 0;
                }else{
                    temp++;
                }
            }
        }
        
        int rank = 1;
        int temp = 0;
        Arrays.sort(arr,(a,b)->(b.score-a.score));
        for(int i=0;i<n;i++){
            result[3][arr[i].idx] = rank;
            if(i+1>=n)continue;
            if(arr[i].score != arr[i+1].score) {
                rank += temp +1;
                temp = 0;
            }else{
                temp++;
            }
        }

        for(int i=0;i<4;i++){
            for(int j=0;j<n;j++){
                System.out.print(result[i][j]+" ");
            }
            System.out.println();
        }
    }
}
